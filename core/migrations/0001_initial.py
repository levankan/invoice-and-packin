# Generated by Django 5.2.6 on 2025-09-14 17:09

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Export',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_number', models.CharField(default=core.models.next_export_number, max_length=20, unique=True)),
                ('invoice_number', models.CharField(default=core.models.next_invoice_number, max_length=20, unique=True)),
                ('packing_list_number', models.CharField(default=core.models.next_packing_list_number, max_length=20, unique=True)),
                ('seller', models.CharField(max_length=255)),
                ('sold_to', models.CharField(max_length=255)),
                ('shipped_to', models.CharField(max_length=255)),
                ('project_no', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('warehouse', 'Warehouse'), ('logistic', 'Logistic'), ('employee', 'Other Employee')], default='employee', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_lot_number', models.CharField(max_length=100)),
                ('document_number', models.CharField(blank=True, max_length=100, null=True)),
                ('item_number', models.CharField(blank=True, max_length=100, null=True)),
                ('cross_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(default=0)),
                ('unit_of_measure', models.CharField(blank=True, max_length=50, null=True)),
                ('box_number', models.CharField(blank=True, max_length=100, null=True)),
                ('commercial_invoice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('posting_date', models.DateField(blank=True, null=True)),
                ('shipment_number', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('carbon_qty', models.IntegerField(blank=True, null=True)),
                ('carbon_lot', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_po', models.CharField(blank=True, max_length=100, null=True)),
                ('po_line', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_order', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_order_line', models.CharField(blank=True, max_length=100, null=True)),
                ('pallet_number', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('lu', models.CharField(blank=True, max_length=100, null=True)),
                ('export', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.export')),
            ],
        ),
    ]
